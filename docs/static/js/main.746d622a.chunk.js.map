{"version":3,"sources":["components/CategoryComponent.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryComponent","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifsProcesados","map","img","id","title","urlImage","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"2MAGaA,EAAoB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEhBC,mBAAS,IAFO,mBAE7CC,EAF6C,KAEjCC,EAFiC,KAiBvD,OACC,mCACU,sBAAMC,SAXO,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,YAAY,YACZC,SAnBA,SAAEP,GACdF,EAAeE,EAAEQ,OAAOC,e,+BCRnBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGDI,MAAOF,GAHN,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAiBD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACpC,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,SAAQ,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAV5B,kBAcZM,GAdY,4CAAH,sDCEPQ,EAAc,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEjC,OACI,sBAAKI,UAAU,8CAAf,UACI,qBAAKC,IAAML,EAAWM,IAAMP,IAC5B,kCAAMA,EAAN,WCHCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAU,WAENzB,EAASC,GAAWyB,MAAM,SAAAC,GAEtBC,YAAW,WACPJ,EAAS,CACLhB,KAAMmB,EACNL,SAAS,MAEd,UAIT,CAAErB,IAEGsB,EDnByBM,CAAc5B,GAAhC0B,EAFuB,EAE7BnB,KAAYc,EAFiB,EAEjBA,QAEpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDjB,EAArD,OACEqB,EAAU,iDAA0B,GACtC,qBAAKJ,UAAU,YAAf,SAEQS,EAAKjB,KAAK,SAAEC,GAAF,OACN,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEXlCkB,EAAe,WAAO,IAAD,EAEI5C,mBAAS,CAAC,eAFd,mBAEzB6C,EAFyB,KAEb9C,EAFa,KAIhC,OACE,qCACE,gDACA,cAAC,EAAD,CAAmBA,cAAgBA,IACnC,uBAEA,6BAEM8C,EAAWrB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,YCVtC+B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,cAAc,Y","file":"static/js/main.746d622a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const CategoryComponent = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const textBox = ( e ) => {\n        setInputValue( e.target.value );\n    };\n\n    const textBoxEnter = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 0 ) {\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n    };\n\n\treturn (\n\t\t<>\n            <form onSubmit={ textBoxEnter }>\n                <input \n                    type=\"text\" \n                    placeholder=\"Buscar...\"\n                    onChange={ textBox }\n                />\n            </form>\n\t\t</>\n\t);\n}\n\nCategoryComponent.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=azBCApGaOO8ka4Irkrcug9elZpYmrwEJ`;\n    const res = await fetch( url );\n    const { data } = await res.json();\n\n    const gifsProcesados = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            urlImage: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifsProcesados;\n};","import React from 'react'\n\nexport const GifGridItem = ({ title, urlImage }) => {\n\n    return (\n        <div className=\"card animate__animated animate__backInRight\">\n            <img src={ urlImage } alt={ title } />\n            <p> { title } </p>\n        </div>\n    );\n}\n","import { React } from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: imgs, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\"> { category } </h3>\n            { loading ? <p>Cargando gifs...</p> : '' }\n            <div className=\"card-grid\">\n                {\n                    imgs.map( ( img ) => (\n                        <GifGridItem key={ img.id } { ...img } />\n                    ))\n                }\n            </div>\n        </>\n    );\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        \n        getGifs( category ).then( imgs => {\n\n            setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false,\n                });\n            }, 3000);\n\n        });\n\n    },[ category ])\n\n    return state;\n\n}","import React, { useState } from 'react';\nimport { CategoryComponent } from './components/CategoryComponent';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Family Guy']);\n\n  return (\n    <>\n      <h2> GifExpertApp </h2>\n      <CategoryComponent setCategories={ setCategories } />\n      <hr />\n\n      <ol>\n        {\n            categories.map( category => {\n                return <GifGrid key={ category } category={ category } />;\n            })\n        }\n      </ol>\n    </>\n  );\n\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render( <GifExpertApp />, document.querySelector('#root'));\n"],"sourceRoot":""}